---
http_interactions:
- request:
    method: get
    uri: https://wykop-rss.herokuapp.com/promoted
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - wykop-rss.herokuapp.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Connection:
      - keep-alive
      Content-Type:
      - application/xml
      Last-Modified:
      - Thu, 13 Aug 2020 22:26:48 GMT
      Date:
      - Fri, 14 Aug 2020 11:09:11 GMT
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Fri, 14 Aug 2020 11:09:11 GMT
recorded_with: VCR 4.0.0
