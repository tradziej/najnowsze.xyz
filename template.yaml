AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'wykop.pl lite client'
Globals:
  Api:
    Cors:
      AllowMethods: "'GET,POST,PUT,OPTIONS'"
      AllowHeaders: "'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,X-Session-Token,X-Read-To'"
      AllowOrigin: "'*'"

Resources:
  ApiGetItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: api.items_handler
      Runtime: ruby2.7
      Timeout: 300
      Events:
        Request:
          Type: Api
          Properties:
            Path: /items
            Method: get
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref ItemsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref SessionsTable
      Environment:
        Variables:
          ITEMS_TABLE: !Ref ItemsTable
          SESSIONS_TABLE: !Ref SessionsTable

  ApiMarkAsReadFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: api.read_handler
      Runtime: ruby2.7
      Timeout: 300
      Events:
        Request:
          Type: Api
          Properties:
            Path: /read
            Method: put
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SessionsTable
      Environment:
        Variables:
          SESSIONS_TABLE: !Ref SessionsTable

  FetcherFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: fetcher.handler
      Runtime: ruby2.7
      Timeout: 300
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ItemsTable
      Environment:
        Variables:
          ITEMS_TABLE: !Ref ItemsTable

  ItemsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: 'date'
          AttributeType: 'S'
        - AttributeName: 'time_guid'
          AttributeType: 'S'
      KeySchema:
        - AttributeName: 'date'
          KeyType: 'HASH'
        - AttributeName: 'time_guid'
          KeyType: 'RANGE'
      BillingMode: 'PAY_PER_REQUEST'

  SessionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: 'token'
          AttributeType: 'S'
      KeySchema:
        - AttributeName: 'token'
          KeyType: 'HASH'
      BillingMode: 'PAY_PER_REQUEST'

  ScheduledRule:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: rate(2 minutes)
      State: ENABLED
      Targets:
        - Arn:
            Fn::GetAtt:
              - FetcherFunction
              - Arn
          Id: TargetFunctionV1

  PermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: FetcherFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - ScheduledRule
          - Arn

Outputs:
  ItemsTable:
    Description: 'Items Dynamo DB table'
    Value:
      Fn::GetAtt:
        - ItemsTable
        - Arn

  SessionsTable:
    Description: 'Sessions Dynamo DB table'
    Value:
      Fn::GetAtt:
        - SessionsTable
        - Arn

  FetcherFunction:
    Value:
      Fn::GetAtt:
        - FetcherFunction
        - Arn

  ApiGetItemsFunction:
    Value:
      Fn::GetAtt:
        - ApiGetItemsFunction
        - Arn

  ApiMarkAsReadFunction:
    Value:
      Fn::GetAtt:
        - ApiMarkAsReadFunction
        - Arn

  ApiUrl:
    Description: 'Gateway endpoint for JSON API'
    Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/'
